@{
    ViewData["Title"] = "AI Image Search";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-12">
            <div class="search-container">
                <!-- Header -->
                <div class="search-header">
                    <h2>
                        <i class="fas fa-image me-2"></i>
                        AI Image Search
                    </h2>
                    <p>Upload an image or provide an image URL to find similar products using advanced AI image recognition.</p>
                    
                    <!-- Feature Badges -->
                    <div class="mt-3">
                        <span class="feature-badge">
                            <i class="fas fa-eye"></i>
                            Visual Recognition
                        </span>
                        <span class="feature-badge">
                            <i class="fas fa-search"></i>
                            Similarity Search
                        </span>
                        <span class="feature-badge">
                            <i class="fas fa-upload"></i>
                            Multi-format Support
                        </span>
                    </div>
                </div>

                <!-- Image Upload Section -->
                <div class="image-upload-section mb-4">
                    <div class="upload-area" id="uploadArea">
                        <div class="upload-content">
                            <i class="fas fa-cloud-upload-alt upload-icon"></i>
                            <h4>Upload Product Image</h4>
                            <p>Drag & drop an image here, or click to select</p>
                            <input type="file" id="imageInput" accept="image/*" style="display: none;">
                            <button type="button" class="btn btn-outline-light mt-2" onclick="document.getElementById('imageInput').click()">
                                <i class="fas fa-folder-open me-2"></i>Choose File
                            </button>
                        </div>
                    </div>
                </div>

                <!-- URL Input Section -->
                <div class="mb-4">
                    <label for="imageUrl" class="form-label text-white fw-semibold mb-3">
                        <i class="fas fa-link me-2"></i>
                        Or enter image URL:
                    </label>
                    <input 
                        type="url" 
                        class="form-control chat-input" 
                        id="imageUrl" 
                        placeholder="https://example.com/product-image.jpg"
                        style="height: auto; padding: 1rem;">
                </div>

                <!-- Optional Text Query -->
                <div class="mb-4">
                    <label for="textQuery" class="form-label text-white fw-semibold mb-3">
                        <i class="fas fa-comment-dots me-2"></i>
                        Additional description (optional):
                    </label>
                    <textarea 
                        class="form-control chat-input" 
                        id="textQuery" 
                        placeholder="e.g., Find similar products in blue color, under $100..."
                        rows="3"></textarea>
                </div>

                <!-- Search Buttons -->
                <div class="search-buttons">
                    <button type="button" class="btn search-btn btn-primary" id="imageSearchBtn">
                        <i class="fas fa-search me-2"></i>
                        Search by Image
                    </button>
                    <button type="button" class="btn search-btn btn-secondary ms-2" id="clearBtn">
                        <i class="fas fa-times me-2"></i>
                        Clear
                    </button>
                </div>

                <!-- Image Preview -->
                <div id="imagePreview" class="mt-4" style="display: none;">
                    <div class="preview-container">
                        <h5 class="text-white mb-3">
                            <i class="fas fa-eye me-2"></i>Image Preview
                        </h5>
                        <img id="previewImage" class="preview-image" alt="Preview">
                        <button type="button" class="btn btn-sm btn-outline-light mt-2" id="removeImageBtn">
                            <i class="fas fa-trash me-2"></i>Remove Image
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search Results -->
    <div id="searchResults" class="mt-4" style="display: none;">
        <div class="search-container">
            <h3 class="text-white mb-4">
                <i class="fas fa-images me-2"></i>
                Similar Products Found
            </h3>
            <div id="resultsContent">
                <!-- Results will be populated here -->
            </div>
        </div>
    </div>

    <!-- Loading Indicator -->
    <div id="loadingIndicator" class="text-center mt-4" style="display: none;">
        <div class="search-container">
            <div class="spinner-border text-light" role="status">
                <span class="visually-hidden">Searching...</span>
            </div>
            <p class="text-white mt-3">Analyzing image and searching for similar products...</p>
        </div>
    </div>
</div>

<!-- Styles for Image Search -->
<style>
    .upload-area {
        background: rgba(255, 255, 255, 0.1);
        border: 2px dashed rgba(255, 255, 255, 0.3);
        border-radius: 20px;
        padding: 3rem 2rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-bottom: 2rem;
    }

    .upload-area:hover {
        border-color: rgba(255, 255, 255, 0.5);
        background: rgba(255, 255, 255, 0.15);
        transform: translateY(-2px);
    }

    .upload-area.dragover {
        border-color: #4facfe;
        background: rgba(79, 172, 254, 0.1);
    }

    .upload-content {
        color: white;
    }

    .upload-icon {
        font-size: 3rem;
        color: rgba(255, 255, 255, 0.7);
        margin-bottom: 1rem;
    }

    .upload-content h4 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 0.5rem;
    }

    .upload-content p {
        color: rgba(255, 255, 255, 0.7);
        margin-bottom: 1rem;
    }

    .preview-container {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        padding: 2rem;
        text-align: center;
    }

    .preview-image {
        max-width: 300px;
        max-height: 300px;
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        object-fit: contain;
    }

    .feature-badge {
        display: inline-block;
        background: rgba(255, 255, 255, 0.15);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 25px;
        font-size: 0.85rem;
        font-weight: 500;
        margin: 0.25rem;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.1);
    }

    .feature-badge i {
        margin-right: 0.5rem;
        opacity: 0.8;
    }
</style>

<!-- JavaScript for Image Search -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    const uploadArea = document.getElementById('uploadArea');
    const imageInput = document.getElementById('imageInput');
    const imageUrl = document.getElementById('imageUrl');
    const textQuery = document.getElementById('textQuery');
    const imageSearchBtn = document.getElementById('imageSearchBtn');
    const clearBtn = document.getElementById('clearBtn');
    const imagePreview = document.getElementById('imagePreview');
    const previewImage = document.getElementById('previewImage');
    const removeImageBtn = document.getElementById('removeImageBtn');
    const searchResults = document.getElementById('searchResults');
    const loadingIndicator = document.getElementById('loadingIndicator');
    const resultsContent = document.getElementById('resultsContent');

    let selectedFile = null;

    // Drag and drop functionality
    uploadArea.addEventListener('dragover', function(e) {
        e.preventDefault();
        uploadArea.classList.add('dragover');
    });

    uploadArea.addEventListener('dragleave', function(e) {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
    });

    uploadArea.addEventListener('drop', function(e) {
        e.preventDefault();
        uploadArea.classList.remove('dragover');
        
        const files = e.dataTransfer.files;
        if (files.length > 0) {
            handleFileSelection(files[0]);
        }
    });

    uploadArea.addEventListener('click', function() {
        imageInput.click();
    });

    imageInput.addEventListener('change', function(e) {
        if (e.target.files.length > 0) {
            handleFileSelection(e.target.files[0]);
        }
    });

    function handleFileSelection(file) {
        if (!file.type.startsWith('image/')) {
            alert('Please select a valid image file.');
            return;
        }

        selectedFile = file;
        
        const reader = new FileReader();
        reader.onload = function(e) {
            previewImage.src = e.target.result;
            imagePreview.style.display = 'block';
            imageUrl.value = ''; // Clear URL input if file is selected
        };
        reader.readAsDataURL(file);
    }

    removeImageBtn.addEventListener('click', function() {
        selectedFile = null;
        imagePreview.style.display = 'none';
        imageInput.value = '';
    });

    clearBtn.addEventListener('click', function() {
        selectedFile = null;
        imagePreview.style.display = 'none';
        imageInput.value = '';
        imageUrl.value = '';
        textQuery.value = '';
        searchResults.style.display = 'none';
    });

    imageSearchBtn.addEventListener('click', function() {
        performImageSearch();
    });

    async function performImageSearch() {
        const hasImage = selectedFile || imageUrl.value.trim();
        
        if (!hasImage) {
            alert('Please upload an image or provide an image URL.');
            return;
        }

        loadingIndicator.style.display = 'block';
        searchResults.style.display = 'none';

        try {
            const formData = new FormData();
            
            if (selectedFile) {
                // Convert file to base64 for API
                const base64 = await fileToBase64(selectedFile);
                formData.append('imageData', base64);
                formData.append('isImageSearch', 'true');
                formData.append('searchMode', 'Image');
            } else if (imageUrl.value.trim()) {
                formData.append('imageUrl', imageUrl.value.trim());
                formData.append('isImageSearch', 'true');
                formData.append('searchMode', 'Image');
            }

            if (textQuery.value.trim()) {
                formData.append('query', textQuery.value.trim());
                formData.append('searchMode', 'Multimodal');
            } else {
                formData.append('query', 'Find similar products');
            }

            const response = await fetch('/search/execute', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();

            if (result.success) {
                displaySearchResults(result.result);
            } else {
                throw new Error(result.error || 'Search failed');
            }
        } catch (error) {
            console.error('Search error:', error);
            alert('Search failed: ' + error.message);
            resultsContent.innerHTML = `
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Search failed: ${error.message}
                </div>
            `;
            searchResults.style.display = 'block';
        } finally {
            loadingIndicator.style.display = 'none';
        }
    }

    function fileToBase64(file) {
        return new Promise((resolve, reject) => {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => resolve(reader.result);
            reader.onerror = error => reject(error);
        });
    }

    function displaySearchResults(result) {
        // Display search results (this would need to be customized based on your search result format)
        resultsContent.innerHTML = `
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>
                Image search functionality is ready. Search results will be displayed here.
            </div>
            <div class="mt-3">
                <pre class="text-white-50 small">${JSON.stringify(result, null, 2)}</pre>
            </div>
        `;
        searchResults.style.display = 'block';
    }
});
</script>
