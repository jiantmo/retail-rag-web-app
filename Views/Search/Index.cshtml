@{
    ViewData["Title"] = "AI Product Search";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-12">
            <div class="search-container">
                <!-- Header -->
                <div class="search-header">
                    <h2>
                        <i class="fas fa-sparkles me-2"></i>
                        AI Product Assistant
                    </h2>
                    <p>Ask me anything about products! I'll help you find the perfect items using advanced AI.</p>
                    
                    <!-- Feature Badges -->
                    <div class="mt-3">
                        <span class="feature-badge">
                            <i class="fas fa-brain"></i>
                            Natural Language Processing
                        </span>
                        <span class="feature-badge">
                            <i class="fas fa-rocket"></i>
                            Real-time Search
                        </span>
                        <span class="feature-badge">
                            <i class="fas fa-star"></i>
                            Personalized Results
                        </span>
                    </div>
                </div>

                <!-- Search Form -->
                <form id="searchForm">
                    <div class="chat-input-container">
                        <label for="searchQuery" class="form-label text-white fw-semibold mb-3">
                            <i class="fas fa-comment-dots me-2"></i>
                            What are you looking for today?
                        </label>
                        <textarea 
                            class="form-control chat-input" 
                            id="searchQuery" 
                            name="searchQuery"
                            placeholder="e.g., What's the best gift options for my 12-year-old daughter? I want something educational but fun, ideally under $50..."
                            rows="4"></textarea>
                    </div>

                    <!-- Search Buttons -->
                    <!-- Search Buttons -->
                    <div class="search-buttons d-flex gap-3 mb-3">
                        <div class="flex-fill">
                            <button type="button" class="btn search-btn btn-rag w-100 h-100" id="ragSearchBtn">
                                <i class="fas fa-search me-2"></i>
                                <div>
                                    <div>RAG Search</div>
                                    <div class="btn-description">Fast semantic search</div>
                                </div>
                            </button>
                        </div>
                        <div class="flex-fill">
                            <button type="button" class="btn search-btn btn-agentic w-100 h-100" id="agenticSearchBtn">
                                <i class="fas fa-brain me-2"></i>
                                <div>
                                    <div>Agentic Search</div>
                                    <div class="btn-description">AI-powered reasoning</div>
                                </div>
                            </button>
                        </div>
                        <div class="flex-fill">
                            <button type="button" class="btn search-btn btn-dataverse w-100 h-100" id="dataverseSearchBtn">
                                <i class="fas fa-database me-2"></i>
                                <div>
                                    <div>Dataverse Search</div>
                                    <div class="btn-description">Enterprise data search</div>
                                </div>
                            </button>
                        </div>
                    </div>

                    <!-- Dataverse Token Input (Collapsible) -->
                    <div class="dataverse-token-container mb-3" style="display: none;" id="tokenContainer">
                        <div class="card border-0 bg-light">
                            <div class="card-body p-3">
                                <div class="d-flex align-items-center mb-2">
                                    <i class="fas fa-key text-primary me-2"></i>
                                    <label for="dataverseToken" class="form-label mb-0 fw-semibold">Dataverse Bearer Token</label>
                                    <button type="button" class="btn btn-sm btn-outline-secondary ms-auto" id="hideTokenBtn">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <textarea class="form-control" 
                                          id="dataverseToken" 
                                          rows="3"
                                          placeholder="Paste your Dataverse Bearer token here (required for Dataverse search)"
                                          title="Paste your Dataverse access token here"></textarea>
                                <small class="text-muted d-block mt-2">
                                    <i class="fas fa-info-circle me-1"></i>
                                    This token is required to authenticate with Dataverse API
                                </small>
                            </div>
                        </div>
                    </div>
                </form>

                <!-- Example Queries -->
                <div class="example-queries">
                    <h6>
                        <i class="fas fa-lightbulb"></i>
                        Try these examples:
                    </h6>
                    <div class="d-flex flex-wrap">
                        <span class="example-query" data-query="What's the best gift for my 12-year-old daughter?">
                            <i class="fas fa-gift me-1"></i>
                            Gift for 12-year-old daughter
                        </span>
                        <span class="example-query" data-query="I need comfortable running shoes under $100">
                            <i class="fas fa-running me-1"></i>
                            Running shoes under $100
                        </span>
                        <span class="example-query" data-query="Show me wireless headphones with good battery life">
                            <i class="fas fa-headphones me-1"></i>
                            Wireless headphones
                        </span>
                        <span class="example-query" data-query="What's trending in men's fashion this season?">
                            <i class="fas fa-tshirt me-1"></i>
                            Men's fashion trends
                        </span>
                        <span class="example-query" data-query="Best laptop for college students under $800">
                            <i class="fas fa-laptop me-1"></i>
                            College laptop under $800
                        </span>
                        <span class="example-query" data-query="Eco-friendly kitchen appliances">
                            <i class="fas fa-leaf me-1"></i>
                            Eco-friendly kitchen
                        </span>
                    </div>
                </div>

                <!-- Loading Indicator -->
                <div id="loadingIndicator" class="loading-indicator" style="display: none;">
                    <div class="loading-spinner"></div>
                    <p><i class="fas fa-magic me-2"></i>Searching for the perfect products...</p>
                </div>

                <!-- Results Container -->
                <div id="searchResults" class="search-results-container"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/search-results-renderer.js?v=@DateTime.Now.Ticks"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            
            // Search function
            function performSearch(searchType) {
                const query = document.getElementById('searchQuery').value.trim();
                
                if (!query) {
                    alert('Please enter a search query');
                    return;
                }
                
                // Show loading and clear results
                const loadingElement = document.getElementById('loadingIndicator');
                const resultsElement = document.getElementById('searchResults');
                
                if (loadingElement) {
                    loadingElement.style.display = 'block';
                }
                
                if (resultsElement) {
                    resultsElement.innerHTML = '';
                }

                // Disable buttons during search
                const buttons = ['ragSearchBtn', 'agenticSearchBtn', 'dataverseSearchBtn'];
                buttons.forEach(btnId => {
                    const btn = document.getElementById(btnId);
                    if (btn) {
                        btn.disabled = true;
                        btn.classList.add('searching');
                    }
                });

                // Determine endpoint and request body
                let endpoint, requestBody;
                if (searchType === 'agentic') {
                    endpoint = '/agentic/search';
                    requestBody = JSON.stringify({ Query: query });
                } else if (searchType === 'dataverse') {
                    endpoint = '/search/dataverse';
                    const dataverseToken = document.getElementById('dataverseToken')?.value.trim() || '';
                    requestBody = JSON.stringify({ 
                        queryText: query,
                        skill: '',
                        options: ['GetResultsSummary'],
                        additionalProperties: { ExecuteUnifiedSearch: true },
                        bearerToken: dataverseToken || null
                    });
                } else {
                    endpoint = '/search/execute';
                    requestBody = JSON.stringify({ query: query });
                }

                // Make API call
                fetch(endpoint, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: requestBody
                })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(text => {
                            throw new Error(`HTTP ${response.status}: ${text}`);
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    displayResults(data, searchType);
                })
                .catch(error => {
                    console.error('Search error:', error);
                    if (resultsElement) {
                        resultsElement.innerHTML = `
                            <div class="alert alert-danger border-0 rounded-4">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>Search Error:</strong> ${error.message || 'An error occurred while searching.'}
                            </div>
                        `;
                    }
                })
                .finally(() => {
                    // Hide loading and re-enable buttons
                    if (loadingElement) {
                        loadingElement.style.display = 'none';
                    }
                    
                    buttons.forEach(btnId => {
                        const btn = document.getElementById(btnId);
                        if (btn) {
                            btn.disabled = false;
                            btn.classList.remove('searching');
                        }
                    });
                });
            }

            // Display results function
            function displayResults(response, searchType) {
                const resultsElement = document.getElementById('searchResults');
                if (!resultsElement) return;

                // Use the new search results renderer
                if (window.searchResultsRenderer) {
                    searchResultsRenderer.renderFormattedResponse(response, resultsElement);
                } else {
                    // Fallback to basic display
                    displayResultsFallback(response, searchType, resultsElement);
                }
            }

            // Fallback display function for compatibility
            function displayResultsFallback(response, searchType, resultsElement) {
                let searchTypeLabel, searchTypeIcon;
                if (searchType === 'agentic') {
                    searchTypeLabel = 'Agentic AI Search';
                    searchTypeIcon = 'fa-brain';
                } else if (searchType === 'dataverse') {
                    searchTypeLabel = 'Dataverse Search';
                    searchTypeIcon = 'fa-database';
                } else {
                    searchTypeLabel = 'AI Semantic Search';
                    searchTypeIcon = 'fa-robot';
                }

                if (response.success || response.Success) {
                    const resultContent = typeof response.result === 'string' 
                        ? response.result 
                        : `<pre class="bg-light p-3 rounded">${JSON.stringify(response.result, null, 2)}</pre>`;
                    
                    const resultHtml = `
                        <div class="search-results">
                            <div class="results-header bg-gradient-primary text-white p-4 rounded-top">
                                <h5 class="mb-0">
                                    <i class="fas ${searchTypeIcon} me-2"></i>
                                    ${searchTypeLabel} Results
                                </h5>
                            </div>
                            <div class="results-content p-4 bg-white rounded-bottom shadow">
                                <div class="search-result-content">
                                    ${resultContent}
                                </div>
                            </div>
                        </div>
                    `;
                    resultsElement.innerHTML = resultHtml;
                } else {
                    resultsElement.innerHTML = `
                        <div class="alert alert-info border-0 rounded-4">
                            <i class="fas fa-info-circle me-2"></i>
                            ${response.error || response.Error || 'No results found. Please try a different search query.'}
                        </div>
                    `;
                }
            }

            // Event listeners
            const ragBtn = document.getElementById('ragSearchBtn');
            if (ragBtn) {
                ragBtn.addEventListener('click', () => performSearch('rag'));
            }
            
            const agenticBtn = document.getElementById('agenticSearchBtn');
            if (agenticBtn) {
                agenticBtn.addEventListener('click', () => performSearch('agentic'));
            }
            
            const dataverseBtn = document.getElementById('dataverseSearchBtn');
            if (dataverseBtn) {
                dataverseBtn.addEventListener('click', () => {
                    const tokenContainer = document.getElementById('tokenContainer');
                    const dataverseToken = document.getElementById('dataverseToken');
                    
                    // Show token container if hidden
                    if (tokenContainer && tokenContainer.style.display === 'none') {
                        tokenContainer.style.display = 'block';
                        if (dataverseToken) dataverseToken.focus();
                        return;
                    }
                    
                    performSearch('dataverse');
                });
            }

            // Hide token button
            const hideTokenBtn = document.getElementById('hideTokenBtn');
            if (hideTokenBtn) {
                hideTokenBtn.addEventListener('click', function() {
                    const tokenContainer = document.getElementById('tokenContainer');
                    if (tokenContainer) {
                        tokenContainer.style.display = 'none';
                    }
                });
            }

            // Enter key shortcuts
            const searchQuery = document.getElementById('searchQuery');
            if (searchQuery) {
                searchQuery.addEventListener('keydown', function(e) {
                    if (e.ctrlKey && e.key === 'Enter') {
                        performSearch('rag');
                    } else if (e.shiftKey && e.key === 'Enter') {
                        performSearch('agentic');
                    }
                });
            }
        });
    </script>

    <style>
        .searching {
            opacity: 0.7;
            transform: scale(0.98);
        }
        
        .example-query.clicked {
            transform: translateY(-2px) scale(0.98);
            box-shadow: var(--shadow-heavy);
        }
        
        .toast-notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: 12px;
            color: white;
            font-weight: 500;
            z-index: 9999;
            box-shadow: var(--shadow-medium);
            display: none;
        }
        
        .toast-success {
            background: linear-gradient(135deg, #28a745, #20c997);
        }
        
        .toast-warning {
            background: linear-gradient(135deg, #ffc107, #fd7e14);
        }
        
        .toast-error {
            background: linear-gradient(135deg, #dc3545, #e83e8c);
        }

        .search-result-content {
            line-height: 1.6;
            font-size: 1rem;
            color: #333;
        }

        .search-result-content h1, .search-result-content h2, .search-result-content h3 {
            color: #2563eb;
            margin-top: 1.5rem;
            margin-bottom: 0.5rem;
        }

        .search-result-content p {
            margin-bottom: 1rem;
        }

        .search-result-content ul, .search-result-content ol {
            padding-left: 1.5rem;
            margin-bottom: 1rem;
        }

        .search-result-content li {
            margin-bottom: 0.5rem;
        }

        .search-result-content strong {
            color: #1e40af;
            font-weight: 600;
        }

        .product-results-container {
            max-height: 70vh;
            overflow-y: auto;
        }

        /* Dataverse Product Card Styling */
        .dataverse-product-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
        }

        .dataverse-product-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .dataverse-product-card .card {
            border: 1px solid #e5e7eb;
        }

        .dataverse-product-card .product-header {
            border-bottom: 2px solid #f1f5f9;
            padding-bottom: 1rem;
        }

        .dataverse-product-card .product-description {
            background: #f8fafc;
            border-radius: 8px;
            padding: 1rem;
            border-left: 4px solid #3b82f6;
        }

        .dataverse-product-card .product-details {
            background: #ffffff;
        }

        .dataverse-product-card .detail-item {
            padding: 0.5rem 0;
            border-bottom: 1px dashed #e5e7eb;
        }

        .dataverse-product-card .detail-item:last-child {
            border-bottom: none;
        }

        .dataverse-product-card .product-timestamps {
            background: #fafafa;
            border-radius: 8px;
            padding: 1rem;
        }

        .dataverse-product-card .product-actions {
            background: #f8fafc;
            margin: 0 -1.5rem -1.5rem -1.5rem;
            padding: 1rem 1.5rem;
            border-radius: 0 0 1rem 1rem;
        }

        .dataverse-product-card h6 {
            color: #374151;
            font-weight: 600;
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.025em;
        }

        .dataverse-product-card .badge {
            font-size: 1rem;
            padding: 0.5rem 1rem;
        }

        /* Results Header for Dataverse */
        .dataverse-results-container .results-header {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
            padding: 1.5rem;
            border-radius: 1rem 1rem 0 0;
            margin-bottom: 1.5rem;
        }

        .dataverse-results-container .results-header h5 {
            margin: 0;
            color: white;
        }

        .dataverse-results-container .results-header .badge {
            background: rgba(255,255,255,0.2);
            color: white;
        }

        .product-card {
            background: white;
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .product-card:hover {
            box-shadow: 0 4px 16px rgba(0,0,0,0.15);
            transform: translateY(-2px);
        }

        .product-image-container {
            height: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: #f8fafc;
            position: relative;
        }

        .product-image {
            max-width: 100%;
            max-height: 100%;
            object-fit: contain;
            border-radius: 8px;
        }

        .product-placeholder {
            display: flex;
            flex-direction: column;
            align-items: center;
            color: #94a3b8;
            font-size: 0.9rem;
        }

        .product-placeholder i {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .product-details {
            padding: 1.5rem;
            height: 100%;
        }

        .product-title {
            color: #1e293b;
            font-weight: 600;
            line-height: 1.3;
        }

        .product-price {
            font-size: 1.25rem;
            font-weight: 700;
            color: #059669;
            white-space: nowrap;
        }

        .product-number {
            color: #64748b;
            font-size: 0.9rem;
        }

        .product-description {
            color: #475569;
            line-height: 1.5;
            font-size: 0.95rem;
            margin-bottom: 1rem;
        }

        .product-attributes {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .attribute-badge {
            display: inline-flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
            white-space: nowrap;
        }

        .color-badge {
            background: linear-gradient(135deg, #fef3c7, #fed7aa);
            color: #92400e;
        }

        .size-badge {
            background: linear-gradient(135deg, #dbeafe, #bfdbfe);
            color: #1e40af;
        }

        .material-badge {
            background: linear-gradient(135deg, #d1fae5, #a7f3d0);
            color: #065f46;
        }

        /* Responsive design for mobile devices */
        @@media (max-width: 768px) {
            .product-card .row {
                flex-direction: column;
            }
            
            .product-image-container {
                height: 150px;
            }
            
            .product-details {
                padding: 1rem;
            }
            
            .attribute-badge {
                font-size: 0.75rem;
                padding: 0.2rem 0.6rem;
            }
        }

        /* Query Breakdown Styles */
        .query-breakdown-container {
            margin-bottom: 1.5rem;
        }

        .query-breakdown-header {
            transition: all 0.2s ease;
        }

        .query-breakdown-header:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        }

        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .query-breakdown-content {
            border-left: 3px solid #667eea;
            border-right: 3px solid #667eea;
            border-bottom: 3px solid #667eea;
        }

        .sub-query-item {
            border-left: 3px solid transparent;
            padding-left: 0.5rem;
            transition: all 0.2s ease;
        }

        .sub-query-item:hover {
            border-left-color: #667eea;
            background-color: rgba(102, 126, 234, 0.05);
            padding-left: 1rem;
        }

        .sub-query-text {
            font-size: 0.95rem;
            line-height: 1.4;
        }

        .sub-query-meta {
            font-size: 0.8rem;
        }

        .sub-query-number .badge {
            width: 24px;
            height: 24px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
        }

        .transition-transform {
            transition: transform 0.3s ease;
        }

        /* Animation for expanding content */
        .query-breakdown-content {
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        /* Dataverse Search Button Styles */
        .btn-dataverse {
            background: linear-gradient(135deg, #6366f1, #8b5cf6);
            border: none;
            color: white;
            transition: all 0.3s ease;
        }

        .btn-dataverse:hover {
            background: linear-gradient(135deg, #5b21b6, #7c3aed);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(139, 92, 246, 0.3);
            color: white;
        }

        /* Search Buttons Layout */
        .search-buttons {
            display: flex;
            gap: 1rem;
        }

        .search-buttons .btn {
            min-height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
        }

        .search-buttons .btn > div {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        /* Token Container Styles */
        .dataverse-token-container {
            animation: slideDown 0.3s ease-out;
        }

        /* Keyframes for animations */
        @@keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .dataverse-token-container .card {
            border: 1px solid #e0e7ff;
            box-shadow: 0 2px 10px rgba(139, 92, 246, 0.1);
        }

        .dataverse-token-container textarea {
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 0.85rem;
            border: 1px solid #d1d5db;
            border-radius: 8px;
            transition: border-color 0.2s ease;
        }

        .dataverse-token-container textarea:focus {
            border-color: #8b5cf6;
            box-shadow: 0 0 0 3px rgba(139, 92, 246, 0.1);
        }

        /* Search Results Container */
        .search-results-container {
            margin-top: 2rem;
            position: relative;
            clear: both;
            overflow: hidden;
        }

        /* Dataverse Results Styles */
        .dataverse-results-container {
            margin-top: 2rem;
            position: relative;
            z-index: 1;
        }

        .dataverse-products-grid {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .dataverse-product-card {
            position: relative;
            z-index: 2;
            width: 100%;
        }

        .dataverse-product-card .card {
            border: 1px solid #e5e7eb;
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            position: relative;
        }

        .dataverse-product-card .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .dataverse-product-card .product-header {
            border-bottom: 1px solid #f3f4f6;
            padding-bottom: 1rem;
        }

        .dataverse-product-card .detail-item {
            padding: 0.5rem 0;
            border-bottom: 1px solid #f9fafb;
        }

        .dataverse-product-card .detail-item:last-child {
            border-bottom: none;
        }

        .dataverse-result-card {
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            margin-bottom: 1rem !important;
            position: relative;
            z-index: 2;
        }

        .dataverse-result-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .dataverse-summary {
            background: linear-gradient(135deg, #ede9fe, #ddd6fe);
            border-radius: 12px;
            padding: 1.5rem;
            border-left: 4px solid #8b5cf6;
            margin-bottom: 1.5rem !important;
            position: relative;
            z-index: 2;
        }
    </style>
}
